{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\sales-report\\\\fe\\\\src\\\\pages\\\\user-management\\\\user-management.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BaseLayout from '../../components/layouts/BaseLayout';\nimport UserCard from '../../components/molecules/card/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n\n  // Fetch users from the database\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage (or wherever you store it)\n      const response = await fetch('http://localhost:5000/api/users', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Add the token to the Authorization header\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch users');\n      const data = await response.json();\n      setUsers(data); // Update the users state with the fetched data\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Add a new user to the database\n  const addUser = async () => {\n    const newUser = {\n      username: 'New User',\n      role: 'user'\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      });\n      if (!response.ok) throw new Error('Failed to add user');\n      const data = await response.json();\n      setUsers(prevUsers => [...prevUsers, data]); // Add the new user to the state\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-red-800 min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUser,\n        className: \"mb-4 px-4 py-2 bg-green-500 text-white font-bold rounded-lg\",\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n          username: user.username,\n          role: user.role\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","BaseLayout","UserCard","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","fetchUsers","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","addUser","newUser","username","role","method","body","JSON","stringify","prevUsers","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_id","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/sales-report/fe/src/pages/user-management/user-management.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BaseLayout from '../../components/layouts/BaseLayout';\r\nimport UserCard from '../../components/molecules/card/index';\r\n\r\ninterface User {\r\n  _id: string;\r\n  username: string;\r\n  role: string;\r\n}\r\n\r\nconst UserManagement: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n\r\n  // Fetch users from the database\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage (or wherever you store it)\r\n      const response = await fetch('http://localhost:5000/api/users', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, // Add the token to the Authorization header\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch users');\r\n      \r\n      const data = await response.json();\r\n      setUsers(data); // Update the users state with the fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Add a new user to the database\r\n  const addUser = async () => {\r\n    const newUser = { username: 'New User', role: 'user' };\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to add user');\r\n      const data = await response.json();\r\n      setUsers((prevUsers) => [...prevUsers, data]); // Add the new user to the state\r\n    } catch (error) {\r\n      console.error('Error adding user:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"p-6 bg-red-800 min-h-screen\">\r\n        <button\r\n          onClick={addUser}\r\n          className=\"mb-4 px-4 py-2 bg-green-500 text-white font-bold rounded-lg\"\r\n        >\r\n          Add New User\r\n        </button>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {users.map((user) => (\r\n            <UserCard key={user._id} username={user.username} role={user.role} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,QAAQ,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ7D,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;;EAE9C;EACA,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE,CAAE;QACtC;MACF,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAE1D,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAIDpB,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,OAAO,GAAG;MAAEC,QAAQ,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAO,CAAC;IAEtD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DY,MAAM,EAAE,MAAM;QACdX,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;MAC9B,CAAC,CAAC;MACF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCX,QAAQ,CAAEsB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEZ,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEhB,OAAA,CAACH,UAAU;IAAA8B,QAAA,eACT3B,OAAA;MAAK4B,SAAS,EAAC,6BAA6B;MAAAD,QAAA,gBAC1C3B,OAAA;QACE6B,OAAO,EAAEX,OAAQ;QACjBU,SAAS,EAAC,6DAA6D;QAAAD,QAAA,EACxE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjC,OAAA;QAAK4B,SAAS,EAAC,sDAAsD;QAAAD,QAAA,EAClExB,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBACdnC,OAAA,CAACF,QAAQ;UAAgBsB,QAAQ,EAAEe,IAAI,CAACf,QAAS;UAACC,IAAI,EAAEc,IAAI,CAACd;QAAK,GAAnDc,IAAI,CAACC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6C,CACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAAC/B,EAAA,CA/DID,cAAwB;AAAAoC,EAAA,GAAxBpC,cAAwB;AAiE9B,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}