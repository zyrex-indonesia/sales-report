{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import LoginPage from'./pages/login/LoginPage';import Dashboard from'./pages/dashboard/dashboard';import UserManagement from'./pages/user-management/user-management';import History from'./pages/history/history';import Report from'./pages/report/report';// Adjusted path to BaseLayout\nimport'./global.css';// Import global CSS here\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const isAuthenticated=()=>{// Add your logic here to check if the user is authenticated (for example, checking if a token exists)\nreturn localStorage.getItem('authToken')?true:false;};ReactDOM.render(/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isAuthenticated()?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/user-management\",element:isAuthenticated()?/*#__PURE__*/_jsx(UserManagement,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:isAuthenticated()?/*#__PURE__*/_jsx(History,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/report\",element:isAuthenticated()?/*#__PURE__*/_jsx(Report,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})}),document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Router","Route","Routes","Navigate","LoginPage","Dashboard","UserManagement","History","Report","jsx","_jsx","jsxs","_jsxs","isAuthenticated","localStorage","getItem","render","children","path","element","to","document","getElementById"],"sources":["C:/Users/user/Documents/sales-report/fe/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport LoginPage from './pages/login/LoginPage';\r\nimport Dashboard from './pages/dashboard/dashboard';\r\nimport UserManagement from './pages/user-management/user-management';\r\nimport History from './pages/history/history';\r\nimport Report from './pages/report/report';\r\nimport BaseLayout from './components/layouts/BaseLayout';  // Adjusted path to BaseLayout\r\nimport './global.css';  // Import global CSS here\r\n\r\nconst isAuthenticated = () => {\r\n  // Add your logic here to check if the user is authenticated (for example, checking if a token exists)\r\n  return localStorage.getItem('authToken') ? true : false;\r\n};\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Routes>\r\n      {/* Default route goes to LoginPage */}\r\n      <Route path=\"/\" element={<LoginPage />} />\r\n\r\n      {/* Wrap authenticated routes with BaseLayout */}\r\n      <Route\r\n        path=\"/dashboard\"\r\n        element={\r\n          isAuthenticated() ? (        \r\n              <Dashboard />         \r\n          ) : (\r\n            <Navigate to=\"/\" />\r\n          )\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/user-management\"\r\n        element={\r\n          isAuthenticated() ? (         \r\n              <UserManagement />          \r\n          ) : (\r\n            <Navigate to=\"/\" />\r\n          )\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/history\"\r\n        element={\r\n          isAuthenticated() ? (       \r\n              <History />         \r\n          ) : (\r\n            <Navigate to=\"/\" />\r\n          )\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/report\"\r\n        element={\r\n          isAuthenticated() ? (        \r\n              <Report />       \r\n          ) : (\r\n            <Navigate to=\"/\" />\r\n          )\r\n        }\r\n      />\r\n    </Routes>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,SAAS,KAAM,6BAA6B,CACnD,MAAO,CAAAC,cAAc,KAAM,yCAAyC,CACpE,MAAO,CAAAC,OAAO,KAAM,yBAAyB,CAC7C,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CACiB;AAC3D,MAAO,cAAc,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B;AACA,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAG,IAAI,CAAG,KAAK,CACzD,CAAC,CAEDjB,QAAQ,CAACkB,MAAM,cACbN,IAAA,CAACV,MAAM,EAAAiB,QAAA,cACLL,KAAA,CAACV,MAAM,EAAAe,QAAA,eAELP,IAAA,CAACT,KAAK,EAACiB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAET,IAAA,CAACN,SAAS,GAAE,CAAE,CAAE,CAAC,cAG1CM,IAAA,CAACT,KAAK,EACJiB,IAAI,CAAC,YAAY,CACjBC,OAAO,CACLN,eAAe,CAAC,CAAC,cACbH,IAAA,CAACL,SAAS,GAAE,CAAC,cAEfK,IAAA,CAACP,QAAQ,EAACiB,EAAE,CAAC,GAAG,CAAE,CAErB,CACF,CAAC,cACFV,IAAA,CAACT,KAAK,EACJiB,IAAI,CAAC,kBAAkB,CACvBC,OAAO,CACLN,eAAe,CAAC,CAAC,cACbH,IAAA,CAACJ,cAAc,GAAE,CAAC,cAEpBI,IAAA,CAACP,QAAQ,EAACiB,EAAE,CAAC,GAAG,CAAE,CAErB,CACF,CAAC,cACFV,IAAA,CAACT,KAAK,EACJiB,IAAI,CAAC,UAAU,CACfC,OAAO,CACLN,eAAe,CAAC,CAAC,cACbH,IAAA,CAACH,OAAO,GAAE,CAAC,cAEbG,IAAA,CAACP,QAAQ,EAACiB,EAAE,CAAC,GAAG,CAAE,CAErB,CACF,CAAC,cACFV,IAAA,CAACT,KAAK,EACJiB,IAAI,CAAC,SAAS,CACdC,OAAO,CACLN,eAAe,CAAC,CAAC,cACbH,IAAA,CAACF,MAAM,GAAE,CAAC,cAEZE,IAAA,CAACP,QAAQ,EAACiB,EAAE,CAAC,GAAG,CAAE,CAErB,CACF,CAAC,EACI,CAAC,CACH,CAAC,CACTC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}