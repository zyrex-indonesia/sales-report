'use strict';

/* globals window */

var test = require('tape');
var forEach = require('../');

test('forEach calls each iterator', function (t) {
    var count = 0;
    t.plan(4);
    forEach({ a: 1, b: 2 }, function (value, key) {
        if (count === 0) {
            t.equal(value, 1);
            t.equal(key, 'a');
        } else {
            t.equal(value, 2);
            t.equal(key, 'b');
        }
        count += 1;
    });
});

test('forEach calls iterator with correct this value', function (t) {
    var thisValue = {};

    t.plan(1);

    forEach([0], function () {
        t.equal(this, thisValue);
    }, thisValue);
});

test('second argument: iterator', function (t) {
    var arr = [];
    t['throws'](function () { forEach(arr); }, TypeError, 'undefined is not a function');
    t['throws'](function () { forEach(arr, null); }, TypeError, 'null is not a function');
    t['throws'](function () { forEach(arr, ''); }, TypeError, 'string is not a function');
    t['throws'](function () { forEach(arr, /a/); }, TypeError, 'regex is not a function');
    t['throws'](function () { forEach(arr, true); }, TypeError, 'true is not a function');
    t['throws'](function () { forEach(arr, false); }, TypeError, 'false is not a function');
    t['throws'](function () { forEach(arr, NaN); }, TypeError, 'NaN is not a function');
    t['throws'](function () { forEach(arr, 42); }, TypeError, '42 is not a function');
    t.doesNotThrow(function () { forEach(arr, function () {}); }, 'function is a function');
    t.doesNotThrow(function () { forEach(arr, setTimeout); }, 'setTimeout is a function');
    if (typeof window !== 'undefined') {
        t.doesNotThrow(function () { forEach(arr, window.alert); }, 'alert is a function');
    }
    t.end();
});

test('array', function (t) {
    var arr = [1, 2, 3];

    t.test('iterates over every item', function (st) {
        var index = 0;
        forEach(arr, function () { index += 1; });
        st.equal(index, arr.length, 'iterates ' + arr.length + ' times');
        st.end(