{"version":3,"sources":["../../../src/server/app-render/action-utils.ts"],"sourcesContent":["import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n  pageName,\n}: {\n  serverActionsManifest: ActionManifest\n  pageName: string\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        const workerEntry =\n          serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ][id].workers[normalizeWorkerPageName(pageName)]\n\n        if (typeof workerEntry === 'string') {\n          return { id: workerEntry, name: id, chunks: [] }\n        }\n\n        const { moduleId, async } = workerEntry\n\n        return { id: moduleId, name: id, chunks: [], async }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n"],"names":["createServerModuleMap","selectWorkerForForwarding","serverActionsManifest","pageName","Proxy","get","_","id","workerEntry","process","env","NEXT_RUNTIME","workers","normalizeWorkerPageName","name","chunks","moduleId","async","actionId","workerName","denormalizeWorkerPageName","Object","keys","pathHasPrefix","bundlePath","normalizeAppPath","removePathPrefix"],"mappings":";;;;;;;;;;;;;;;IASgBA,qBAAqB;eAArBA;;IAgCAC,yBAAyB;eAAzBA;;;0BAxCiB;+BACH;kCACG;AAM1B,SAASD,sBAAsB,EACpCE,qBAAqB,EACrBC,QAAQ,EAIT;IACC,OAAO,IAAIC,MACT,CAAC,GACD;QACEC,KAAK,CAACC,GAAGC;YACP,MAAMC,cACJN,qBAAqB,CACnBO,QAAQC,GAAG,CAACC,YAAY,KAAK,SAAS,SAAS,OAChD,CAACJ,GAAG,CAACK,OAAO,CAACC,wBAAwBV,UAAU;YAElD,IAAI,OAAOK,gBAAgB,UAAU;gBACnC,OAAO;oBAAED,IAAIC;oBAAaM,MAAMP;oBAAIQ,QAAQ,EAAE;gBAAC;YACjD;YAEA,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGT;YAE5B,OAAO;gBAAED,IAAIS;gBAAUF,MAAMP;gBAAIQ,QAAQ,EAAE;gBAAEE;YAAM;QACrD;IACF;AAEJ;AAMO,SAAShB,0BACdiB,QAAgB,EAChBf,QAAgB,EAChBD,qBAAqC;QAGnCA;IADF,MAAMU,WACJV,mCAAAA,qBAAqB,CACnBO,QAAQC,GAAG,CAACC,YAAY,KAAK,SAAS,SAAS,OAChD,CAACO,SAAS,qBAFXhB,iCAEaU,OAAO;IACtB,MAAMO,aAAaN,wBAAwBV;IAE3C,oCAAoC;IACpC,IAAI,CAACS,SAAS;IAEd,6DAA6D;IAC7D,IAAIA,OAAO,CAACO,WAAW,EAAE;QACvB;IACF;IAEA,yEAAyE;IACzE,OAAOC,0BAA0BC,OAAOC,IAAI,CAACV,QAAQ,CAAC,EAAE;AAC1D;AAEA;;;CAGC,GACD,SAASC,wBAAwBV,QAAgB;IAC/C,IAAIoB,IAAAA,4BAAa,EAACpB,UAAU,QAAQ;QAClC,OAAOA;IACT;IAEA,OAAO,QAAQA;AACjB;AAEA;;CAEC,GACD,SAASiB,0BAA0BI,UAAkB;IACnD,OAAOC,IAAAA,0BAAgB,EAACC,IAAAA,kCAAgB,EAACF,YAAY;AACvD"}