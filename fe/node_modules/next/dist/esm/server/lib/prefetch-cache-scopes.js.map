{"version":3,"sources":["../../../src/server/lib/prefetch-cache-scopes.ts"],"sourcesContent":["import type { CacheScopeStore } from '../async-storage/cache-scope.external'\n\nexport class PrefetchCacheScopes {\n  private cacheScopes = new Map<\n    string,\n    {\n      cache: CacheScopeStore['cache']\n      // we track timestamp as we evict after 30s\n      // if a prefetch cache scope isn't used by then\n      timestamp: number\n    }\n  >()\n\n  private evict() {\n    for (const [key, value] of this.cacheScopes) {\n      if (value.timestamp < Date.now() - 30_000) {\n        this.cacheScopes.delete(key)\n      }\n    }\n  }\n\n  // TODO: should this key include query params if so we need to\n  // filter _rsc query\n  get(url: string) {\n    setImmediate(() => this.evict())\n    return this.cacheScopes.get(url)?.cache\n  }\n\n  set(url: string, cache: CacheScopeStore['cache']) {\n    setImmediate(() => this.evict())\n    return this.cacheScopes.set(url, {\n      cache,\n      timestamp: Date.now(),\n    })\n  }\n\n  del(url: string) {\n    this.cacheScopes.delete(url)\n  }\n}\n"],"names":["PrefetchCacheScopes","evict","key","value","cacheScopes","timestamp","Date","now","delete","get","url","setImmediate","cache","set","del","Map"],"mappings":"AAEA,OAAO,MAAMA;IAWHC,QAAQ;QACd,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAI,IAAI,CAACC,WAAW,CAAE;YAC3C,IAAID,MAAME,SAAS,GAAGC,KAAKC,GAAG,KAAK,OAAQ;gBACzC,IAAI,CAACH,WAAW,CAACI,MAAM,CAACN;YAC1B;QACF;IACF;IAEA,8DAA8D;IAC9D,oBAAoB;IACpBO,IAAIC,GAAW,EAAE;YAER;QADPC,aAAa,IAAM,IAAI,CAACV,KAAK;QAC7B,QAAO,wBAAA,IAAI,CAACG,WAAW,CAACK,GAAG,CAACC,yBAArB,sBAA2BE,KAAK;IACzC;IAEAC,IAAIH,GAAW,EAAEE,KAA+B,EAAE;QAChDD,aAAa,IAAM,IAAI,CAACV,KAAK;QAC7B,OAAO,IAAI,CAACG,WAAW,CAACS,GAAG,CAACH,KAAK;YAC/BE;YACAP,WAAWC,KAAKC,GAAG;QACrB;IACF;IAEAO,IAAIJ,GAAW,EAAE;QACf,IAAI,CAACN,WAAW,CAACI,MAAM,CAACE;IAC1B;;aAnCQN,cAAc,IAAIW;;AAoC5B"}